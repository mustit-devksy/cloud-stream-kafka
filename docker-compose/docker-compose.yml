version: '2'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka
  kafka1:
    container_name: kafka1
    image: wurstmeister/kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
#      JMX_PORT: 9093
#      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${hostname} -Dcom.sun.management.jmxremote.rmi.port=9093
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${hostname}:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      BOOTSTRAP_SERVERS: kafka1:9093,kafka2:9094,kafka3:9095
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka
  kafka2:
    container_name: kafka2
    image: wurstmeister/kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${hostname}:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      BOOTSTRAP_SERVERS: kafka1:9093,kafka2:9094,kafka3:9095
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka
  kafka3:
    container_name: kafka3
    image: wurstmeister/kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9095:9095"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${hostname}:9095
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9095
      BOOTSTRAP_SERVERS: kafka1:9093,kafka2:9094,kafka3:9095
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka
  kafka-manager:
    container_name: kafka-manager
    image: hlebalbau/kafka-manager
    restart: on-failure
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - zookeeper
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: "kingking"
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    ports:
      - "9000:9000"
    networks:
      - kafka
networks:
  kafka:
    name: kafka-network